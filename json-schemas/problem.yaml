$schema: http://json-schema.org/draft-07/schema#
$id: https://www.sift.net/hddl/draft/2023-08-01/problem

type: object
properties:
  name:
    type: string
  domain:
    type: string
  objects:
    $ref: "#/$defs/typelist"
  goal:
    $ref: "#/$defs/goal"
  requirements:
    type: array
    items:
      type: string
  init:
    type: array
    items:
      $ref: "#/$defs/goal"
  htn:
    $ref: "#/$defs/problemHTN"
required:
  - name
  - init
  - htn

$defs:
  typelist:
    type: array
    items:
      $ref: "#/$defs/typeCell"
    title: Typed list
    description: >
      A list of objects, each of which associates a name with
      a type. Typing is optional in PDDL/HDDL, so the type
      property is optional.        
  typeCell:
    type: object
    properties:
      name:
        type: string
      type:
        type: string
    required: [name]

  atomicTerm:
    type: object
    properties:
      predicate:
        type: string
      args:
        type: array
        items:
          type: string
    required:
      - predicate
      - args
  goal:
    oneOf:
      - $ref: "#/$defs/atomicTerm"
      - $ref: "#/$defs/negatedGoal"
      - $ref: "#/$defs/naryOpGoal"
      - $ref: "#/$defs/binaryOpGoal"
      - $ref: "#/$defs/quantifiedGoal"
  negatedGoal:
    type: object
    properties:
      op:
        type: string
        const: not
      operand:
        $ref: "#/$defs/goal"
    required:
      - op
      - operand
  binaryOpGoal:
    type: object
    properties:
      op:
        type: string
        enum:
          - imply
      operand1:
        $ref: "#/$defs/goal"
      operand2:
        $ref: "#/$defs/goal"
    required: [op, operand1, operand2]
  naryOpGoal:
    type: object
    properties:
      op:
        enum:
          - and
          - or
      operands:
        type: array
        items:
          $ref: "#/$defs/goal"
    required: [op, operands]
  quantifiedGoal:
    type: object
    properties:
      op:
        enum:
          - forall
          - exists
      boundVars:
        $ref: "#/$defs/typelist"
      effect:
        $ref: "#/$defs/goal"
    required:
      - op
      - boundVars
      - effect

  problemHTN:
    type: object
    properties:
      parameters:
        $ref: "#/$defs/typelist"
      orderedSubtasks:
        type: array
        items:
          $ref: "#/$defs/task"

  task:
    type: object
    properties:
      args:
        type: array
        items:
          type: string
      taskName:
        type: string
    required: [args, taskName]
